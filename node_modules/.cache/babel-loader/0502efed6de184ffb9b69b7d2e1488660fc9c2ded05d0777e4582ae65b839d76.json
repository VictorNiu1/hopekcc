{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hongy\\\\OneDrive\\\\Documents\\\\hopekcc\\\\src\\\\components\\\\Projects.js\";\nimport React from 'react';\nimport './Projects.css';\nimport robotImage from '\\Users\\hongy\\OneDrive\\Documents\\hopekcc\\src\\components/robot.png'; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  name: 'Project 1',\n  description: 'Github Link/Description',\n  image: robotImage\n}, {\n  name: 'Project 2',\n  description: 'Github Link/Description',\n  image: robotImage\n}, {\n  name: 'Project 3',\n  description: 'Github Link/Description',\n  image: robotImage\n}];\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"HopeKCC Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"projects-list\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"project-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.image,\n          alt: `${project.name} image`,\n          className: \"project-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","robotImage","jsxDEV","_jsxDEV","projects","name","description","image","Projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hongy/OneDrive/Documents/hopekcc/src/components/Projects.js"],"sourcesContent":["import React from 'react';\r\nimport './Projects.css';\r\nimport robotImage from '\\Users\\hongy\\OneDrive\\Documents\\hopekcc\\src\\components/robot.png'; // Ensure the path is correct\r\n\r\nconst projects = [\r\n  {\r\n    name: 'Project 1',\r\n    description: 'Github Link/Description',\r\n    image: robotImage, \r\n  },\r\n  {\r\n    name: 'Project 2',\r\n    description: 'Github Link/Description',\r\n    image: robotImage, \r\n  },\r\n  {\r\n    name: 'Project 3',\r\n    description: 'Github Link/Description',\r\n    image: robotImage,\r\n  },\r\n];\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h2>HopeKCC Projects</h2>\r\n      <ul className=\"projects-list\">\r\n        {projects.map((project, index) => (\r\n          <li key={index} className=\"project-item\">\r\n            <img src={project.image} alt={`${project.name} image`} className=\"project-image\" />\r\n            <h3>{project.name}</h3>\r\n            <p>{project.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,UAAU,MAAM,kEAAkE,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,QAAQ,GAAG,CACf;EACEC,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAEN;AACT,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAEN;AACT,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBC,WAAW,EAAE,yBAAyB;EACtCC,KAAK,EAAEN;AACT,CAAC,CACF;AAED,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACEL,OAAA;IAAKM,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCP,OAAA;MAAAO,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBX,OAAA;MAAIM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BN,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bd,OAAA;QAAgBM,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACtCP,OAAA;UAAKe,GAAG,EAAEF,OAAO,CAACT,KAAM;UAACY,GAAG,EAAE,GAAGH,OAAO,CAACX,IAAI,QAAS;UAACI,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnFX,OAAA;UAAAO,QAAA,EAAKM,OAAO,CAACX;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBX,OAAA;UAAAO,QAAA,EAAIM,OAAO,CAACV;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHrBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GAfIZ,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}